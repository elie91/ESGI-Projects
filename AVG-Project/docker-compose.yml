version: '3.4'

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

services:
  php:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
    volumes:
      - ./api:/srv/api:rw
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
  api:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro
  vulcain:
    image: dunglas/vulcain
    environment:
      - UPSTREAM=http://api
    depends_on:
      - api
    ports:
      - '8080:80'
  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432
  mercure:
    image: dunglas/mercure:v0.9
    environment:
      - ALLOW_ANONYMOUS=1
      - CORS_ALLOWED_ORIGINS=*
      - DEMO=1
      - MERCURE_SUBSCRIBER_JWT_KEY=!ChangeMe!
      - MERCURE_PUBLISHER_JWT_KEY=!ChangeMe!
      - JWT_KEY=!ChangeMe!
      - PUBLISH_ALLOWED_ORIGINS=http://localhost:1337 # required for publishing from the demo page
    ports:
      - 1337:80
  client:
    build:
      context: ./client
      target: api_platform_client_development
      cache_from:
        - ${CLIENT_IMAGE:-quay.io/api-platform/client}
    image: ${CLIENT_IMAGE:-quay.io/api-platform/client}
    tty: true # https://github.com/facebook/create-react-app/issues/8688
    environment:
      - API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT=http://api
      - API_PLATFORM_CLIENT_GENERATOR_OUTPUT=src
    volumes:
      - ./client:/usr/src/client
    ports:
      - 8081:8080
  prisma:
    image: prismagraphql/prisma:1.34
    ports:
      - 4466:4466
    depends_on:
      - db
    environment:
      PRISMA_CONFIG: |
        # managementApiSecret: gheziuheozgie
        port: 4466
        databases:
          default:
            connector: postgres
            host: db
            port: 5432
            user: api-platform
            password: '!ChangeMe!'
            database: api
            schema: public
            connectionLimit: 2
volumes:
  db-data:
  client_node_modules:
