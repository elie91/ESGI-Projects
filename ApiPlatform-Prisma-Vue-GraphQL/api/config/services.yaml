# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $overrideEmailTo: '%env(resolve:OVERRIDE_EMAIL_TO)%'
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Swagger\SwaggerDecorator:
    decorates: 'api_platform.swagger.normalizer.documentation'
    arguments: [ '@App\Swagger\SwaggerDecorator.inner' ]
    autoconfigure: false

  App\EventListener\UserListener:
    tags:
      - { name: 'kernel.event_listener', event: 'kernel.view', method: 'onKernelView', priority: 33 }

  App\EventListener\JWTListener:
    class: App\EventListener\JWTListener
    arguments: [ '@api_platform.iri_converter' ]
    tags:
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_invalid, method: onJWTInvalid }
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_expired, method: onJWTExpired }
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

  App\EventListener\UserAwareListener:
    tags:
      - { name: 'api_platform.doctrine.orm.query_extension.collection', priority: 9 }
      - { name: 'api_platform.doctrine.orm.query_extension.item' , priority: 9 }

  App\EventSubscriber\HomeSubscriber:
    tags:
      - { name: "doctrine.event_subscriber" }

  App\EventSubscriber\EventsSubscriber:
    tags:
      - { name: "doctrine.event_subscriber" }
